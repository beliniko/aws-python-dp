AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Resources:
  WriteToAuroraFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: writeToAurora
      Handler: lambda/write_to_go.lambda_handler
      Runtime: python3.11
      CodeUri: src/
      Timeout: 10
      MemorySize: 128
      VpcConfig:
        SecurityGroupIds:
          - sg-<your_security_group_id>
        SubnetIds:
          - subnet-<your_subnet_id_1>
          - subnet-<your_subnet_id_2>
      Environment:
        Variables:
          DB_HOST: <your_db_host>
          DB_NAME: <your_db_name>
          DB_USER:  <your_db_user>
          DB_PASSWORD: <your_db_password>
      Policies:
        - AWSLambdaVPCAccessExecutionRole
        - Statement:
            - Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
              Resource: "*"

  InsertClientsDynamoDB:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: InsertClientsDynamoDB
      Handler: lambda/insert_client_lambdaDyB.lambda_handler
      Runtime: python3.11
      CodeUri: src/
      Timeout: 15
      MemorySize: 128
      Environment:
        Variables:
          TABLE_NAME: <your_table_name>
      Policies:
        - AmazonDynamoDBFullAccess

  InsertClientsPostgres:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: insertClientsPostgres
      Handler: lambda/add_clients_postgres_lambda.lambda_handler
      Runtime: python3.11
      CodeUri: src/
      Timeout: 15
      MemorySize: 128
      VpcConfig:
        SecurityGroupIds:
          - sg-<your_security_group_id>
        SubnetIds:
          - subnet-<your_subnet_id_1>
          - subnet-<your_subnet_id_2>
      Environment:
        Variables:
          DB_HOST: <db_host>
          DB_NAME: <db_name>
          DB_USER: <user>
          DB_PASSWORD: <password>
      Policies:
        - AWSLambdaVPCAccessExecutionRole
    Metadata:
      BuildMethod: python3.11

